services:
  webapp:
    restart: unless-stopped
    container_name: webapp
    # image: ghcr.io/your-username/your-repo:your-tag  # Image from GitHub Container Registry
    image: webapp:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 22-alpine
        PNPM_REGISTRY: "https://registry.npmjs.org/"
      target: ${BUILD_STAGE:-prod}
    env_file:
      - .env
    ports:
      - "${API_PORT:-3000}:${API_PORT:-3000}"
    volumes:
      - .:/app
      - ./config/data/uploads:/app/config/data/uploads
    networks:
      - net
    depends_on:
      database:
        condition: service_healthy
    entrypoint: ["/app/config/scripts/docker-entrypoint.sh"]

  database:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_HOST_AUTH_METHOD: trust
    command: ["postgres", "-c", "ssl=off"]
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    healthcheck:
      test: "pg_isready --username=${DB_USER} --dbname=${DB_NAME} && psql --username=${DB_USER} --dbname=${DB_NAME} --list"
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - ./config/db/pg_data:/var/lib/postgresql
      - ./config/db/pg_dataset:/docker-entrypoint-initdb.d
    networks:
      - net

  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest
    container_name: whisper
    restart: unless-stopped
    ports:
      - ${WHISPER_PORT:-9000}:9000
    environment:
      - ASR_MODEL=${WHISPER_MODEL:-base}
      - ASR_ENGINE=${WHISPER_ENGINE:-openai_whisper}
    volumes:
      - ./config/data/uploads:/tmp
    networks:
      - net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3

  # minio:
  #   image: minio/minio:latest
  #   container_name: minio
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
  #   ports:
  #     - '${MINIO_PORT:-9000}:9000'
  #     - '${MINIO_CONSOLE_PORT:-9001}:9001'
  #   volumes:
  #     - minio_data:/data
  #   command: server /data --console-address ":9001"
  #   networks:
  #     - net

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   ports:
  #     - '${PGADMIN_PORT:-5050}:80'
  #   depends_on:
  #     - database
  #   networks:
  #     - net

volumes:
  db:
  # minio_data:

networks:
  net:
